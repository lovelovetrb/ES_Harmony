import Head from "next/head";
import { useState, useEffect } from "react";

import styles from "@/styles/Home.module.css";

import Header from "@/components/Header/Header";
import ButtonArea from "@/components/molecules/ButtonArea/ButtonArea";
import Button from "@/components/atoms/Button/Button";
import StudentCard from "@/components/molecules/StudentCard/StudentCard";

import { StudentData } from "@/types/types";
import { getData } from "@/lib/getData";

import { Noto_Sans_JP } from "next/font/google";

import { motion } from "framer-motion";

const notojp = Noto_Sans_JP({
    weight: ["400", "500", "700"],
    subsets: ["latin"],
    variable: "--font-notojp",
    display: "swap",
});

type Props = {
    studentData: StudentData[];
};

export default function Home({ studentData }: Props) {
    const [sort, setSort] = useState("match_level");
    const [order, setOrder] = useState("asc");

    const onClickOrder = () => {
        if (order === "desc") {
            setOrder("asc");
        } else {
            setOrder("desc");
        }
    };

    const onClickSort = () => {
        if (sort === "match_level") {
            setSort("AI_degree");
        } else {
            setSort("match_level");
        }
    };

    useEffect(() => {
        const sortData = () => {
            const sortedData = studentData.sort((a, b) => {
                if (order === "desc") {
                    return a[sort] - b[sort];
                } else {
                    return b[sort] - a[sort];
                }
            });
            return sortedData;
        };
        sortData();
    }, [sort, order]);

    return (
        <>
            <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }} transition={{ duration: 0.15 }}>
                <Head>
                    <title>ES Harmony</title>
                    <meta name="description" content="Generated by create next app" />
                    <meta name="viewport" content="width=device-width, initial-scale=1" />
                    <link rel="icon" href="/favicon.ico" />
                </Head>
                <main className={`${styles.main} ${notojp.variable}`}>
                    <Header />
                    <div className={styles.container}>
                        <ButtonArea>
                            <Button text={sort == "AI_degree" ? "AI度" : "マッチ度"} onClickFunc={onClickSort} />
                            <Button text={order == "asc" ? "昇順↑" : "降順↓"} onClickFunc={onClickOrder} />
                        </ButtonArea>
                        <div className={styles.cardArea}>
                            {studentData.map((one_studentData: StudentData, index: number) => (
                                <motion.div
                                    initial={{ opacity: 0, scale: 0.5 }}
                                    animate={{ opacity: 1, scale: 1 }}
                                    transition={{ duration: 0.25 }}
                                    whileHover={{ scale: 1.05 }}
                                >
                                    <StudentCard studentData={one_studentData} />
                                </motion.div>
                            ))}
                        </div>
                    </div>
                </main>
            </motion.div>
        </>
    );
}

export const getStaticProps = async () => {
    const studentData: StudentData = await getData();
    return {
        props: { studentData },
    };
};
