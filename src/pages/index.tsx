import Head from "next/head";
import { GetStaticProps } from "next";
import { useState } from "react";

import styles from "@/styles/Home.module.css";

import SortButton from "@/components/atoms/SortButton/SortButton";
import ButtonArea from "@/components/molecules/ButtonArea/ButtonArea";
import StudentCard from "@/components/molecules/StudentCard/StudentCard";

import { StudentData } from "@/types/types";
import { firebaseData } from "@/types/types";
import { getData } from "@/lib/getData";

import { motion } from "framer-motion";

type Props = {
  studentData: StudentData[];
};

type sortType = "match_level" | "originality";
type orderType = "asc" | "desc";

export default function Home({ studentData }: Props) {
  const [sort, setSort] = useState<sortType>("match_level");
  const [order, setOrder] = useState<orderType>("desc");

  const handleSort = (field: sortType) => {
    if (field === sort) {
      setOrder(order === "asc" ? "desc" : "asc");
    } else {
      setSort(field);
      setOrder("asc");
    }
  };

  studentData.sort((a, b) => {
    if (order === "desc") {
      return a[sort] < b[sort] ? 1 : -1;
    } else {
      return b[sort] > a[sort] ? -1 : 1;
    }
  });

  const listVariants = {
    visible: {
      opacity: 1,
      transition: {
        staggerChildren: 0.1, // 子要素に1秒間隔でアニメーションを行う
      },
    },
    hidden: {
      opacity: 0,
    },
  };

  const itemVariants = {
    visible: { x: 0 },
    hidden: { x: -300 },
  };
  return (
    <>
      <Head>
        <title>ES Harmony</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }} transition={{ duration: 0.15 }}>
        <main>
          <div className={styles.container}>
            <ButtonArea>
              <SortButton
                text={`マッチ度 ${sort == "match_level" && order == "asc" ? "↑" : "↓"}`}
                onClickFunc={handleSort}
                feild="match_level"
              />
              <SortButton
                text={`オリジナリティ ${sort == "originality" && order == "asc" ? "↑" : "↓"}`}
                onClickFunc={handleSort}
                feild="originality"
              />
            </ButtonArea>
            <div className={styles.cardArea}>
              <motion.ol variants={listVariants} initial="hidden" animate="visible">
                {studentData !== undefined ? (
                  <>
                    {studentData.map((one_studentData: StudentData, index: number) => (
                      <motion.li variants={itemVariants} key={index}>
                        <motion.div transition={{ duration: 0.25 }} whileHover={{ scale: 1.05 }} key={index}>
                          <StudentCard studentData={one_studentData} />
                        </motion.div>
                      </motion.li>
                    ))}
                  </>
                ) : (
                  <></>
                )}
              </motion.ol>
            </div>
          </div>
        </main>
      </motion.div>
    </>
  );
}

export const getStaticProps: GetStaticProps = async () => {
  const studentData: firebaseData[] = await getData();
  return {
    props: {
      studentData: studentData,
    },
  };
};
